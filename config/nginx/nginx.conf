user ooftv staff;
rtmp_auto_push on;
#worker_processes  auto
events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application stream {

            live on; # this puts the m3u8 in the folder live. the m3u8 will be named by the encoder output (stream key)

            # on hardware encoder, stream to this address: rtmp://192.168.0.220:1935/hls/oof
            # in obs, server = rtmp://ooftv.duckdns.org/hls and stream key = oof . the stream key can be anything, but will change the path to the video
            # the stream for all this will be here: https://ooftv.duckdns.org/hls/oof/index.m3u8

            # this is command line code for running an ffmpeg command.
            exec ffmpeg -i rtmp://localhost:1935/hls/$name
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p2628kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 30 -r 30 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p1128kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 750k -f flv -g 30 -r 30 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_360p878kbs
              -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 400k -f flv -g 30 -r 30 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p528kbs
              -c:a libfdk_aac -b:a 64k -c:v libx264 -b:v 200k -f flv -g 15 -r 15 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p264kbs
              -c:a libfdk_aac -b:a 128k -f flv -g 30 -r 30 -preset superfast rtmp://localhost:1935/hls/$name_radio; #isolating this string (along with it's counterpart at #40, doesn;t work.)

        }

        application hls {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 10;
            # I think, but need to confirm that the hls_path is just where files are created, but not served?
            hls_path /usr/local/var/www/live; # it will create this folder, and set the owner to nobody.
            hls_nested on;

            hls_variant _720p2628kbs BANDWIDTH=2628000,RESOLUTION=1280x720;
            hls_variant _480p1128kbs BANDWIDTH=1128000,RESOLUTION=854x480;
            hls_variant _360p878kbs BANDWIDTH=878000,RESOLUTION=640x360;
            hls_variant _240p528kbs BANDWIDTH=528000,RESOLUTION=426x240;
            hls_variant _240p264kbs BANDWIDTH=264000,RESOLUTION=426x240;
            hls_variant _radio BANDWIDTH=264000,RESOLUTION=0x0;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile        on;
    tcp_nopush     on;
    keepalive_timeout  65;
    gzip  on;


    server {
        listen 80;
        server_name  ooftv.duckdns.org www.ooftv.net;
        return 302 https://$server_name:443;
    }

    server {
      listen 443 default_server ssl;
      server_name ooftv.duckdns.org www.ooftv.net;

      # enables SSLv3/TLSv1, but not SSLv2 which is weak and should no longer be used.
      # ssl_protocols SSLv3 TLSv1;

      # disables all weak ciphers
      #ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

      # This URL provides RTMP statistics in XML
      location /stat {
          rtmp_stat all;
          # Use this stylesheet to view XML as web page
          # in browser
          rtmp_stat_stylesheet stat.xsl;
      }

      location /stat.xsl {
          # XML stylesheet to view RTMP stats.
          # Copy stat.xsl wherever you want
          # and put the full directory path here
          root /usr/local/etc/nginx/rtmp/stat.xsl/;
      }

      location /hls-fragmenrs {
        # Serve HLS fragments
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        root /usr/local/var/www;
        add_header Cache-Control no-cache;
      }

      ## Access and error logs.
      access_log /usr/local/var/log/nginx/access.log;
      error_log  /usr/local/var/log/nginx/error.log debug;

      ## Keep alive timeout set to a greater value for SSL/TLS.
      keepalive_timeout 75 75;

      ## See the keepalive_timeout directive in nginx.conf.
      ## Server certificate and key.

      ssl_certificate /etc/letsencrypt/live/ooftv.duckdns.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/ooftv.duckdns.org/privkey.pem;
      ssl_session_timeout  5m;

      ## Strict Transport Security header for enhanced security. See
      ## http://www.chromium.org/sts. I've set it to 2 hours; set it to
      ## whichever age you want.
      #add_header Strict-Transport-Security "max-age=7200";

      root /usr/local/var/www/;
      index index.php index.html;
    }

}
